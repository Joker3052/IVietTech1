package com.example.fire_warning_app

import android.content.Context
import android.icu.text.SimpleDateFormat
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ArrayAdapter
import android.widget.ImageView
import android.widget.ListView
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import com.squareup.picasso.Picasso
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.GlobalScope
import kotlinx.coroutines.launch
import kotlinx.coroutines.withContext
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory
import java.util.*

class ImageListActivity : AppCompatActivity() {

    private lateinit var listView: ListView
    private lateinit var adapter: ImageDataAdapter

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_image_list)

        listView = findViewById(R.id.listView)

        // Khởi tạo adapter
        adapter = ImageDataAdapter(this, R.layout.item_image, mutableListOf())

        // Gọi API để lấy danh sách ImageData
        val retrofit = Retrofit.Builder()
            .baseUrl("https://anor.pythonanywhere.com/image/")
            .addConverterFactory(GsonConverterFactory.create())
            .build()

        val api = retrofit.create(ImageApiService::class.java)
        fetchImageDataList(api)
    }

//    private fun fetchImageDataList(api: ImageApiService) {
//        GlobalScope.launch {
//            try {
//                val imageDataList = api.getAllImages()
//                withContext(Dispatchers.Main) {
//                    adapter.addAll(imageDataList)
//                    listView.adapter = adapter
//                }
//            } catch (e: Exception) {
//                // Xử lý lỗi
//            }
//        }
//    }

    private fun fetchImageDataList(api: ImageApiService) {
        GlobalScope.launch {
            try {
                val imageDataList = api.getAllImages().toMutableList()
                imageDataList.reverse()
                withContext(Dispatchers.Main) {
                    adapter.addAll(imageDataList)
                    listView.adapter = adapter
                }
            } catch (e: Exception) {
                // Xử lý lỗi
            }
        }
    }

//    inner class ImageDataAdapter(
//        context: Context,
//        private val resource: Int,
//        private val imageDataList: MutableList<ImageData>
//    ) : ArrayAdapter<ImageData>(context, resource, imageDataList) {
//
//        override fun getView(position: Int, convertView: View?, parent: ViewGroup): View {
//            val view: View = convertView ?: LayoutInflater.from(context)
//                .inflate(resource, parent, false)
//
//            val createdAtTextView: TextView = view.findViewById(R.id.createdAtTextView)
//            val imageView: ImageView = view.findViewById(R.id.imageView)
//
//            val imageData: ImageData = imageDataList[position]
//            createdAtTextView.text = "Created At: ${imageData.created_at}"
//
//            // Sử dụng thư viện Picasso hoặc Glide để tải hình ảnh từ URL
//            Picasso.get().load(imageData.image_url).into(imageView)
//            // Glide.with(context).load(imageData.image_url).into(imageView)
//
//            return view
//        }
//    }


    inner class ImageDataAdapter(
        context: Context,
        private val resource: Int,
        private val imageDataList: MutableList<ImageData>
    ) : ArrayAdapter<ImageData>(context, resource, imageDataList) {

        override fun getView(position: Int, convertView: View?, parent: ViewGroup): View {
            val view: View = convertView ?: LayoutInflater.from(context)
                .inflate(resource, parent, false)

            val createdAtTextView: TextView = view.findViewById(R.id.createdAtTextView)
            val imageView: ImageView = view.findViewById(R.id.imageView)

            val imageData: ImageData = imageDataList[position]

            val dateString = imageData.created_at
            val dateFormat = SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss", Locale.getDefault())
            val date = dateFormat.parse(dateString)

            val formattedDateFormat = SimpleDateFormat("dd/MM/yyyy", Locale.getDefault())
            val formattedDate = formattedDateFormat.format(date)

            createdAtTextView.text = "$formattedDate"

            Picasso.get().load(imageData.image_url).into(imageView)

            return view
        }
    }


}

