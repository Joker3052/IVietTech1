package com.example.fire_warning_app

import android.app.Notification
import android.app.NotificationChannel
import android.app.NotificationManager
import android.content.Context
import android.content.Intent
import android.media.MediaPlayer
import android.os.Build
import android.os.Bundle
import android.widget.Button
import android.widget.ImageView
import androidx.appcompat.app.AppCompatActivity

class SoundActivity : AppCompatActivity() {
    private lateinit var soundImageView: ImageView
    private lateinit var soundButton: Button
    private lateinit var mediaPlayer: MediaPlayer
    private var isSoundOn: Boolean = false

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            val channelId = "fire_channel"
            val channelName = "Fire Channel"
            val importance = NotificationManager.IMPORTANCE_HIGH
            val channel = NotificationChannel(channelId, channelName, importance)
            val notificationManager = getSystemService(NotificationManager::class.java)
            notificationManager.createNotificationChannel(channel)
        }
        setContentView(R.layout.activity_sound)

        soundImageView = findViewById(R.id.soundImageView)
        soundButton = findViewById(R.id.soundButton)
        mediaPlayer = MediaPlayer.create(this, R.raw.sound_alarm)

        soundButton.setOnClickListener {
            isSoundOn = !isSoundOn
            updateSoundState()

            if (isSoundOn) {
                mediaPlayer.start()
                mediaPlayer.isLooping = true
                showFireNotification()
                startSoundService()
            } else {
                mediaPlayer.pause()
                mediaPlayer.seekTo(0)
                mediaPlayer.isLooping = false
                cancelFireNotification()
                stopSoundService()
            }
        }

        mediaPlayer.setOnCompletionListener {
            if (isSoundOn) {
                mediaPlayer.seekTo(0)
                mediaPlayer.start()
            }
        }
    }

    private fun showFireNotification() {
        val channelId = "fire_channel"
        val notificationId = 1
        val notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            val channel = notificationManager.getNotificationChannel(channelId)
            if (channel?.importance == NotificationManager.IMPORTANCE_NONE) {
                return
            }
        }

        val notificationBuilder = Notification.Builder(this, channelId)
            .setSmallIcon(R.drawable.fire96)
            .setContentTitle("Đang có lửa")
            .setContentText("Hãy kiểm tra ngay!")
            .setAutoCancel(true)

        notificationManager.notify(notificationId, notificationBuilder.build())
    }

    private fun cancelFireNotification() {
        val notificationId = 1
        val notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
        notificationManager.cancel(notificationId)
    }

    private fun updateSoundState() {
        if (isSoundOn) {
            soundImageView.setImageResource(R.drawable.icons_sound_on)
        } else {
            soundImageView.setImageResource(R.drawable.icons_sound_off)
        }
    }

    private fun startSoundService() {
        val serviceIntent = Intent(this, SoundService::class.java)
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            startForegroundService(serviceIntent)
        } else {
            startService(serviceIntent)
        }
    }

    private fun stopSoundService() {
        val serviceIntent = Intent(this, SoundService::class.java)
        stopService(serviceIntent)
    }

    override fun onDestroy() {
        super.onDestroy()
        mediaPlayer.release()
    }
}
